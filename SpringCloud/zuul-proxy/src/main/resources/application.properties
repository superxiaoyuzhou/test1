server.port=8801
spring.application.name=zuul-proxy
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.instance.hostname=localhost

#开启查看路由的监控端点
management.endpoints.web.exposure.include=routes

#Zuul和Eureka结合使用，可以实现路由的自动配置，自动配置的路由以服务名称为匹配路径
#zuul.routes.user-service.path=/user-service/**
#zuul.routes.fegin-service.path=/fegin-service/**
#关闭默认路由配置
#zuul.ignored-services: user-service,feign-service

#zuul自定义路径配置
#zuul.routes.user-service.path=/userService/**
#zuul.routes.fegin-service.path=/feginService/**

#由于Zuul自动集成了Ribbon和Hystrix，所以Zuul天生就有负载均衡和服务容错能力
#可以通过Ribbon和Hystrix的配置来配置Zuul中的相应功能
user-service.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule
